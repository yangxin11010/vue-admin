{"version":3,"sources":["webpack:///./src/views/other/person-center.vue","webpack:///./src/views/other/person-center.vue?3fc2","webpack:///./src/views/other/person-center.vue?6d2f","webpack:///./src/views/other/person-center.vue?6f81"],"names":["class","align","gutter","span","shadow","header","$t","size","src","icon-class","before-leave","tabsBeforeLeave","label","label-width","name","sex","value","email","type","introduction","loginTime","length","description","timeLoading","item","index","key","timestamp","time","placement","browser","system","effect","content","address","country","province","city","area","loginPageChange","background","current-page","loginData","page","page-size","layout","total","model","passWord","ref","rules","prop","oldPass","show-password","clearable","newPass","loading","updateLoading","updatePass","reset","setup","t","states","passFormRef","validator","rule","callback","Error","trigger","clearValidate","validate","valid","setTimeout","resetFields","activeName","getLoginIngo","e","report","queryLoginInfo","data","pageCount","list","render","__scopeId"],"mappings":"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","file":"js/chunk-15a12ae4.85dcff8d.js","sourcesContent":["<template>\r\n    <div class=\"psersonCenter\">\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"6\">\r\n                <el-card shadow=\"hover\">\r\n                    <template #header>\r\n                        <span>{{ $t(\"personCenter.cardTitle\") }}</span>\r\n                    </template>\r\n                    <div class=\"about-box\">\r\n                        <el-avatar\r\n                            :size=\"100\"\r\n                            src=\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\"\r\n                        ></el-avatar>\r\n                        <p class=\"font_wb\">Super Admin</p>\r\n                        <p>Admin</p>\r\n                    </div>\r\n                    <div class=\"about-item\">\r\n                        <div class=\"about-item-top\">\r\n                            <svg-icon class=\"icon\" icon-class=\"book\" />\r\n                            <span>{{ $t(\"personCenter.description\") }}</span>\r\n                        </div>\r\n                        <div class=\"about-item-content\">\r\n                            Are you ok?\r\n                        </div>\r\n                    </div>\r\n                </el-card>\r\n            </el-col>\r\n            <el-col :span=\"18\">\r\n                <el-card shadow=\"hover\">\r\n                    <el-tabs :before-leave=\"tabsBeforeLeave\">\r\n                        <el-tab-pane :label=\"$t('personCenter.account')\">\r\n                            <el-form label-width=\"100px\">\r\n                                <el-form-item label=\"Name：\">\r\n                                    <template #label>\r\n                                        <span class=\"font_wb\">{{ $t(\"personCenter.accountInfo.name\") }}：</span>\r\n                                    </template>\r\n                                    <el-input class=\"form-input\" v-model=\"name\"></el-input>\r\n                                </el-form-item>\r\n                                <el-form-item label=\"Sex：\">\r\n                                    <template #label>\r\n                                        <span class=\"font_wb\">{{ $t(\"personCenter.accountInfo.sex\") }}：</span>\r\n                                    </template>\r\n                                    <el-select class=\"form-input\" v-model=\"sex\">\r\n                                        <el-option :label=\"$t('sex.male')\" :value=\"1\"></el-option>\r\n                                        <el-option :label=\"$t('sex.female')\" :value=\"0\"></el-option>\r\n                                    </el-select>\r\n                                </el-form-item>\r\n                                <el-form-item label=\"Eamil：\">\r\n                                    <template #label>\r\n                                        <span class=\"font_wb\">{{ $t(\"personCenter.accountInfo.email\") }}：</span>\r\n                                    </template>\r\n                                    <el-input class=\"form-input\" v-model=\"email\"></el-input>\r\n                                </el-form-item>\r\n                                <el-form-item label=\"Introduction：\">\r\n                                    <template #label>\r\n                                        <span class=\"font_wb\">{{ $t(\"personCenter.accountInfo.introduction\") }}：</span>\r\n                                    </template>\r\n                                    <el-input type=\"textarea\" class=\"form-input\" v-model=\"introduction\"></el-input>\r\n                                </el-form-item>\r\n                                <el-form-item>\r\n                                    <el-button type=\"primary\">{{ $t(\"button.save\") }}</el-button>\r\n                                </el-form-item>\r\n                            </el-form>\r\n                        </el-tab-pane>\r\n                        <el-tab-pane :label=\"$t('personCenter.loginRecord')\">\r\n                            <el-empty\r\n                                v-if=\"loginTime.length <= 0\"\r\n                                v-loading=\"timeLoading\"\r\n                                description=\"暂无记录\"\r\n                            ></el-empty>\r\n                            <el-timeline v-loading=\"timeLoading\" v-else>\r\n                                <el-timeline-item\r\n                                    v-for=\"(item, index) in loginTime\"\r\n                                    :key=\"index\"\r\n                                    :timestamp=\"item.time\"\r\n                                    placement=\"top\"\r\n                                >\r\n                                    <el-card shadow=\"hover\">\r\n                                        <div class=\"time-line\">\r\n                                            <table>\r\n                                                <tr>\r\n                                                    <td align=\"right\">browser：</td>\r\n                                                    <td>{{ item.browser }}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td align=\"right\">system：</td>\r\n                                                    <td>{{ item.system }}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td align=\"right\">location：</td>\r\n                                                    <td>\r\n                                                        <el-tooltip\r\n                                                            effect=\"dark\"\r\n                                                            :content=\"item.address\"\r\n                                                            placement=\"right\"\r\n                                                        >\r\n                                                            <span>\r\n                                                                <span class=\"location\">{{ item.country }}</span>\r\n                                                                <span class=\"location\">{{ item.province }}</span>\r\n                                                                <span class=\"location\">{{ item.city }}</span>\r\n                                                                <span class=\"location\">{{ item.area }}</span>\r\n                                                            </span>\r\n                                                        </el-tooltip>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </div>\r\n                                    </el-card>\r\n                                </el-timeline-item>\r\n                            </el-timeline>\r\n                            <el-pagination\r\n                                @current-change=\"loginPageChange\"\r\n                                background\r\n                                v-model:current-page=\"loginData.page\"\r\n                                :page-size=\"10\"\r\n                                layout=\"total, prev, pager, next, jumper\"\r\n                                :total=\"loginData.total\"\r\n                            >\r\n                            </el-pagination>\r\n                        </el-tab-pane>\r\n                        <el-tab-pane :label=\"$t('personCenter.editPwd')\">\r\n                            <el-form :model=\"passWord\" ref=\"passFormRef\" :rules=\"rules\" label-width=\"150px\">\r\n                                <el-form-item prop=\"oldPass\">\r\n                                    <template #label>\r\n                                        <span class=\"font_wb\">{{ $t(\"personCenter.editPwdInfo.oldPwd\") }}：</span>\r\n                                    </template>\r\n                                    <el-input\r\n                                        class=\"form-input\"\r\n                                        v-model=\"passWord.oldPass\"\r\n                                        show-password\r\n                                        clearable\r\n                                    ></el-input>\r\n                                </el-form-item>\r\n                                <el-form-item prop=\"newPass\">\r\n                                    <template #label>\r\n                                        <span class=\"font_wb\">{{ $t(\"personCenter.editPwdInfo.newPwd\") }}：</span>\r\n                                    </template>\r\n                                    <el-input\r\n                                        class=\"form-input\"\r\n                                        v-model=\"passWord.newPass\"\r\n                                        show-password\r\n                                        clearable\r\n                                    ></el-input>\r\n                                </el-form-item>\r\n                                <el-form-item>\r\n                                    <el-button type=\"primary\" :loading=\"updateLoading\" @click=\"updatePass\">\r\n                                        {{ $t(\"button.edit\") }}\r\n                                    </el-button>\r\n                                    <el-button @click=\"reset\">{{ $t(\"button.reset\") }}</el-button>\r\n                                </el-form-item>\r\n                            </el-form>\r\n                        </el-tab-pane>\r\n                    </el-tabs>\r\n                </el-card>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, reactive, ref, toRefs } from \"vue\";\r\nimport { successMessage } from \"@/util/message\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport $api from \"@/api\";\r\nimport type { LoginInfoList } from \"@model/api\";\r\n\r\n\r\nexport default defineComponent({\r\n    name: \"PsersonCenter\",\r\n    setup() {\r\n        const { t: $t } = useI18n();\r\n\r\n        let states = reactive({\r\n            name: \"Super Admin\",\r\n            sex: 1,\r\n            email: \"yx17714503091@163.com\",\r\n            introduction: \"又是充满希望的一天！\",\r\n        });\r\n\r\n        let passWord = reactive({\r\n            oldPass: \"\",\r\n            newPass: \"\",\r\n        });\r\n\r\n        const updateLoading = ref(false);\r\n\r\n        const passFormRef = ref();\r\n        const rules = reactive({\r\n            oldPass: [\r\n                {\r\n                    validator: (rule: any, value: string, callback: any) => {\r\n                        if (value) {\r\n                            callback();\r\n                        } else {\r\n                            callback(new Error($t(\"personCenter.editPwdInfo.requireError\")));\r\n                        }\r\n                    },\r\n                    trigger: \"change\",\r\n                },\r\n                {\r\n                    validator: (rule: any, value: string, callback: any) => {\r\n                        if (value.length < 6) {\r\n                            callback(new Error($t(\"personCenter.editPwdInfo.less6Error\")));\r\n                        } else if (value !== \"\" && value !== passWord.newPass) {\r\n                            callback(new Error($t(\"personCenter.editPwdInfo.differentError\")));\r\n                        } else {\r\n                            passFormRef.value.clearValidate();\r\n                            callback();\r\n                        }\r\n                    },\r\n                    trigger: \"change\",\r\n                },\r\n            ],\r\n            newPass: [\r\n                {\r\n                    validator: (rule: any, value: string, callback: any) => {\r\n                        if (value) {\r\n                            callback();\r\n                        } else {\r\n                            callback(new Error($t(\"personCenter.editPwdInfo.requireError\")));\r\n                        }\r\n                    },\r\n                    trigger: \"change\",\r\n                },\r\n                {\r\n                    validator: (rule: any, value: string, callback: any) => {\r\n                        if (value.length < 6) {\r\n                            callback(new Error($t(\"personCenter.editPwdInfo.less6Error\")));\r\n                        } else if (value !== \"\" && value !== passWord.oldPass) {\r\n                            callback(new Error($t(\"personCenter.editPwdInfo.differentError\")));\r\n                        } else {\r\n                            passFormRef.value.clearValidate();\r\n                            callback();\r\n                        }\r\n                    },\r\n                    trigger: \"change\",\r\n                },\r\n            ],\r\n        });\r\n\r\n        // 修改密码\r\n        const updatePass = () => {\r\n            passFormRef.value.validate((valid: boolean) => {\r\n                if (valid) {\r\n                    updateLoading.value = true;\r\n                    setTimeout(() => {\r\n                        successMessage(\"Update Successfully\");\r\n                        reset()\r\n                        updateLoading.value = false;\r\n                    }, 1000);\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        };\r\n        // 重置\r\n        const reset = () => {\r\n            passFormRef.value.resetFields();\r\n        };\r\n\r\n        // tabs 切换\r\n        const tabsBeforeLeave = (activeName: string) => {\r\n            if(activeName === \"1\" && loginTime.value.length <= 0){\r\n                getLoginIngo()\r\n            }\r\n        };\r\n\r\n        // 登录信息\r\n        const timeLoading = ref(true);\r\n        const loginTime = ref<Array<LoginInfoList>>([]);\r\n        const loginData = reactive({\r\n            page: 1,\r\n            total: 0,\r\n        })\r\n        const loginPageChange = (e: number) => {\r\n            loginData.page = e;\r\n            getLoginIngo()\r\n        };\r\n\r\n        const getLoginIngo = async () => {\r\n            timeLoading.value = true;\r\n            const { data } =  await $api.report.queryLoginInfo({\r\n                page: loginData.page,\r\n            });\r\n            loginData.total = data.pageCount\r\n            loginTime.value = data.list\r\n            timeLoading.value = false;\r\n        }\r\n\r\n        return {\r\n            loginTime,\r\n            timeLoading,\r\n            tabsBeforeLeave,\r\n            loginPageChange,\r\n            ...toRefs(states),\r\n            loginData,\r\n            passWord,\r\n            passFormRef,\r\n            reset,\r\n            updatePass,\r\n            updateLoading,\r\n            rules,\r\n        };\r\n    },\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.about-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n    p {\r\n        margin-top: 10px;\r\n    }\r\n}\r\n.form-input {\r\n    width: 350px;\r\n}\r\n.about-item {\r\n    font-size: 14px;\r\n    padding: 15px 0;\r\n}\r\n.time-line > p {\r\n    margin-bottom: 3px;\r\n}\r\n.location {\r\n    margin-right: 3px;\r\n}\r\n.about-item-top {\r\n    display: flex;\r\n    align-items: center;\r\n    border-bottom: 1px solid #dfe6ec;\r\n    padding-bottom: 10px;\r\n    margin-bottom: 10px;\r\n    .icon {\r\n        font-size: 18px;\r\n    }\r\n    span {\r\n        margin-left: 5px;\r\n        font-weight: 700;\r\n        color: #606266;\r\n    }\r\n}\r\n.about-item-content {\r\n    color: #777;\r\n}\r\n</style>\r\n","\r\nimport { defineComponent, reactive, ref, toRefs } from \"vue\";\r\nimport { successMessage } from \"@/util/message\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport $api from \"@/api\";\r\nimport type { LoginInfoList } from \"@model/api\";\r\n\r\n\r\nexport default defineComponent({\r\n    name: \"PsersonCenter\",\r\n    setup() {\r\n        const { t: $t } = useI18n();\r\n\r\n        let states = reactive({\r\n            name: \"Super Admin\",\r\n            sex: 1,\r\n            email: \"yx17714503091@163.com\",\r\n            introduction: \"又是充满希望的一天！\",\r\n        });\r\n\r\n        let passWord = reactive({\r\n            oldPass: \"\",\r\n            newPass: \"\",\r\n        });\r\n\r\n        const updateLoading = ref(false);\r\n\r\n        const passFormRef = ref();\r\n        const rules = reactive({\r\n            oldPass: [\r\n                {\r\n                    validator: (rule: any, value: string, callback: any) => {\r\n                        if (value) {\r\n                            callback();\r\n                        } else {\r\n                            callback(new Error($t(\"personCenter.editPwdInfo.requireError\")));\r\n                        }\r\n                    },\r\n                    trigger: \"change\",\r\n                },\r\n                {\r\n                    validator: (rule: any, value: string, callback: any) => {\r\n                        if (value.length < 6) {\r\n                            callback(new Error($t(\"personCenter.editPwdInfo.less6Error\")));\r\n                        } else if (value !== \"\" && value !== passWord.newPass) {\r\n                            callback(new Error($t(\"personCenter.editPwdInfo.differentError\")));\r\n                        } else {\r\n                            passFormRef.value.clearValidate();\r\n                            callback();\r\n                        }\r\n                    },\r\n                    trigger: \"change\",\r\n                },\r\n            ],\r\n            newPass: [\r\n                {\r\n                    validator: (rule: any, value: string, callback: any) => {\r\n                        if (value) {\r\n                            callback();\r\n                        } else {\r\n                            callback(new Error($t(\"personCenter.editPwdInfo.requireError\")));\r\n                        }\r\n                    },\r\n                    trigger: \"change\",\r\n                },\r\n                {\r\n                    validator: (rule: any, value: string, callback: any) => {\r\n                        if (value.length < 6) {\r\n                            callback(new Error($t(\"personCenter.editPwdInfo.less6Error\")));\r\n                        } else if (value !== \"\" && value !== passWord.oldPass) {\r\n                            callback(new Error($t(\"personCenter.editPwdInfo.differentError\")));\r\n                        } else {\r\n                            passFormRef.value.clearValidate();\r\n                            callback();\r\n                        }\r\n                    },\r\n                    trigger: \"change\",\r\n                },\r\n            ],\r\n        });\r\n\r\n        // 修改密码\r\n        const updatePass = () => {\r\n            passFormRef.value.validate((valid: boolean) => {\r\n                if (valid) {\r\n                    updateLoading.value = true;\r\n                    setTimeout(() => {\r\n                        successMessage(\"Update Successfully\");\r\n                        reset()\r\n                        updateLoading.value = false;\r\n                    }, 1000);\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        };\r\n        // 重置\r\n        const reset = () => {\r\n            passFormRef.value.resetFields();\r\n        };\r\n\r\n        // tabs 切换\r\n        const tabsBeforeLeave = (activeName: string) => {\r\n            if(activeName === \"1\" && loginTime.value.length <= 0){\r\n                getLoginIngo()\r\n            }\r\n        };\r\n\r\n        // 登录信息\r\n        const timeLoading = ref(true);\r\n        const loginTime = ref<Array<LoginInfoList>>([]);\r\n        const loginData = reactive({\r\n            page: 1,\r\n            total: 0,\r\n        })\r\n        const loginPageChange = (e: number) => {\r\n            loginData.page = e;\r\n            getLoginIngo()\r\n        };\r\n\r\n        const getLoginIngo = async () => {\r\n            timeLoading.value = true;\r\n            const { data } =  await $api.report.queryLoginInfo({\r\n                page: loginData.page,\r\n            });\r\n            loginData.total = data.pageCount\r\n            loginTime.value = data.list\r\n            timeLoading.value = false;\r\n        }\r\n\r\n        return {\r\n            loginTime,\r\n            timeLoading,\r\n            tabsBeforeLeave,\r\n            loginPageChange,\r\n            ...toRefs(states),\r\n            loginData,\r\n            passWord,\r\n            passFormRef,\r\n            reset,\r\n            updatePass,\r\n            updateLoading,\r\n            rules,\r\n        };\r\n    },\r\n});\r\n","import { render } from \"./person-center.vue?vue&type=template&id=41befad2&scoped=true\"\nimport script from \"./person-center.vue?vue&type=script&lang=ts\"\nexport * from \"./person-center.vue?vue&type=script&lang=ts\"\n\nimport \"./person-center.vue?vue&type=style&index=0&id=41befad2&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-41befad2\"\n\nexport default script","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./person-center.vue?vue&type=style&index=0&id=41befad2&lang=scss&scoped=true\""],"sourceRoot":""}