{"version":3,"sources":["webpack:///./src/views/system/system.vue","webpack:///./src/views/system/system.vue?f0ea","webpack:///./src/views/system/system.vue?012e"],"names":["class","type","clickHandle","age","userage","count","page","ref","promise","loginIngo","result","code","value","data","list","item","index","key","title","error","name","setup","promiseRef","mystore","userstore","setstore","commit","Math","floor","random","state","goods","queryGoods","size","log","e","console","render"],"mappings":"4IACSA,MAAM,U,iBACwC,S,+LADnD,eAiBM,MAjBN,EAiBM,CAhBF,eAAgE,GAArDC,KAAK,UAAW,QAAO,EAAAC,a,0BAAa,iBAAK,C,0BACpD,eAAyB,SAAtB,YAAS,eAAG,EAAAC,KAAG,GAClB,eAA+B,SAA5B,cAAW,eAAG,EAAAC,SAAO,GACxB,eAA4B,SAAzB,aAAU,eAAG,EAAAC,OAAK,GACrB,eAAiB,wBAAX,EAAAC,MAAI,GACV,eAUU,GAVDC,IAAI,aAAcC,QAAS,EAAAC,W,0BAChC,iBAKO,CALP,eAKO,Q,yBAJH,gBADYC,EACZ,EADYA,OACZ,MADkB,CAClB,eAA8B,SAA3B,SAAM,eAAGA,EAAOC,MAAI,GACvB,eAEY,GAFAC,MAAOF,EAAOG,KAAKC,M,0BACxB,gBADwCD,EACxC,EADwCA,KACxC,MAD4C,E,mBAC/C,eAAkE,2BAAvCA,GAAI,SAApBE,EAAMC,G,wBAAjB,eAAkE,KAAhCC,IAAKD,GAAK,eAAKD,EAAKG,OAAK,M,yCAGnE,eAEQ,Q,yBADJ,gBADaC,EACb,EADaA,MACb,MADkB,C,8BACfA,GAAK,O,wECRT,iBAAgB,CAC3BC,KAAM,SACNC,MAF2B,WAGvB,IAAMf,EAAO,eAAI,GACbgB,EAAa,iBACbC,EAAU,iBACVC,EAAY,iBACZC,EAAW,iBAGf,gBAAc,eAEd,IAAMvB,EAAc,WAChBqB,EAAQG,OAAO,UAAWC,KAAKC,MAAsB,GAAhBD,KAAKE,WAC1CL,EAAUE,OAAO,UAAWC,KAAKC,MAAsB,GAAhBD,KAAKE,WAC5CJ,EAASC,OAAO,YAAaD,EAASK,MAAMzB,MAAQ,IAMxD,gBAAU,eAEV,IAAMI,EAAY,WACd,OAAO,OAAKsB,MAAMC,WAAW,CACzB1B,KAAMA,EAAKM,MACXqB,KAAM,MAIRC,EAAM,SAACC,GACTC,QAAQF,IAAIC,IAGhB,MAAO,CACHjC,cACAO,YACAyB,MACA5B,OACAgB,aACAnB,IAAK,gBAAS,kBAAMoB,EAAQO,MAAM3B,OAClCC,QAAS,gBAAS,kBAAMoB,EAAUM,MAAM3B,OACxCE,MAAO,gBAAS,kBAAMoB,EAASK,MAAMzB,aC9CjD,EAAOgC,OAASA,EAED","file":"js/chunk-2d0ac5ad.2dacd60c.js","sourcesContent":["<template>\r\n    <div class=\"system\">\r\n        <el-button type=\"primary\" @click=\"clickHandle\">click</el-button>\r\n        <p>mystore: {{ age }}</p>\r\n        <p>userstore: {{ userage }}</p>\r\n        <p>setstore: {{ count }}</p>\r\n        <p>{{ page }}</p>\r\n        <Promise ref=\"promiseRef\" :promise=\"loginIngo\">\r\n            <Then v-slot=\"{ result }\">\r\n                <p>code: {{ result.code }}</p>\r\n                <data-list :value=\"result.data.list\" v-slot=\"{ data }\">\r\n                    <p v-for=\"(item, index) in data\" :key=\"index\">{{ item.title }}</p>\r\n                </data-list>\r\n            </Then>\r\n            <Catch v-slot=\"{ error }\">\r\n                {{ error }}\r\n            </Catch>\r\n        </Promise>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, onMounted, ref } from \"vue\";\r\nimport { usePageUpdate } from \"@/hooks\";\r\nimport { useGlobal, useUserGlobal, useSetGlobal } from \"@/mystore\";\r\nimport $api from \"@/api\";\r\n// import { useStore } from \"@/store\";\r\n\r\nexport default defineComponent({\r\n    name: \"System\",\r\n    setup() {\r\n        const page = ref(1),\r\n            promiseRef = ref(),\r\n            mystore = useGlobal(),\r\n            userstore = useUserGlobal(),\r\n            setstore = useSetGlobal();\r\n        // store = useStore();\r\n\r\n        usePageUpdate(() => {});\r\n\r\n        const clickHandle = () => {\r\n            mystore.commit(\"SET_AGE\", Math.floor(Math.random() * 10));\r\n            userstore.commit(\"SET_AGE\", Math.floor(Math.random() * 10));\r\n            setstore.commit(\"SET_COUNT\", setstore.state.count + 1);\r\n            // mystore.commit(\"SET_AGE\", Math.floor(Math.random() * 10));\r\n            // store.dispatch(\"setting/SET_NAME\", \"李四\");\r\n            // page.value++;\r\n            // promiseRef.value.http();\r\n        };\r\n        onMounted(() => {});\r\n\r\n        const loginIngo = () => {\r\n            return $api.goods.queryGoods({\r\n                page: page.value,\r\n                size: 10,\r\n            });\r\n        };\r\n\r\n        const log = (e: any) => {\r\n            console.log(e);\r\n        };\r\n\r\n        return {\r\n            clickHandle,\r\n            loginIngo,\r\n            log,\r\n            page,\r\n            promiseRef,\r\n            age: computed(() => mystore.state.age),\r\n            userage: computed(() => userstore.state.age),\r\n            count: computed(() => setstore.state.count),\r\n        };\r\n    },\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","\r\nimport { computed, defineComponent, onMounted, ref } from \"vue\";\r\nimport { usePageUpdate } from \"@/hooks\";\r\nimport { useGlobal, useUserGlobal, useSetGlobal } from \"@/mystore\";\r\nimport $api from \"@/api\";\r\n// import { useStore } from \"@/store\";\r\n\r\nexport default defineComponent({\r\n    name: \"System\",\r\n    setup() {\r\n        const page = ref(1),\r\n            promiseRef = ref(),\r\n            mystore = useGlobal(),\r\n            userstore = useUserGlobal(),\r\n            setstore = useSetGlobal();\r\n        // store = useStore();\r\n\r\n        usePageUpdate(() => {});\r\n\r\n        const clickHandle = () => {\r\n            mystore.commit(\"SET_AGE\", Math.floor(Math.random() * 10));\r\n            userstore.commit(\"SET_AGE\", Math.floor(Math.random() * 10));\r\n            setstore.commit(\"SET_COUNT\", setstore.state.count + 1);\r\n            // mystore.commit(\"SET_AGE\", Math.floor(Math.random() * 10));\r\n            // store.dispatch(\"setting/SET_NAME\", \"李四\");\r\n            // page.value++;\r\n            // promiseRef.value.http();\r\n        };\r\n        onMounted(() => {});\r\n\r\n        const loginIngo = () => {\r\n            return $api.goods.queryGoods({\r\n                page: page.value,\r\n                size: 10,\r\n            });\r\n        };\r\n\r\n        const log = (e: any) => {\r\n            console.log(e);\r\n        };\r\n\r\n        return {\r\n            clickHandle,\r\n            loginIngo,\r\n            log,\r\n            page,\r\n            promiseRef,\r\n            age: computed(() => mystore.state.age),\r\n            userage: computed(() => userstore.state.age),\r\n            count: computed(() => setstore.state.count),\r\n        };\r\n    },\r\n});\r\n","import { render } from \"./system.vue?vue&type=template&id=5f931349\"\nimport script from \"./system.vue?vue&type=script&lang=ts\"\nexport * from \"./system.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}